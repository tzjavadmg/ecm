<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milisong.breakfast.scm.goods.mapper.GoodsCombinationRefMapper">
  <resultMap id="BaseResultMap" type="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRef">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="combination_code" jdbcType="VARCHAR" property="combinationCode" />
    <result column="single_code" jdbcType="VARCHAR" property="singleCode" />
    <result column="goods_count" jdbcType="INTEGER" property="goodsCount" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `combination_code`, `single_code`, `goods_count`, `is_deleted`, `create_by`, 
    `create_time`, `update_by`, `update_time`
  </sql>
  <select id="selectByExample" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRefExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from `goods_combination_ref`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `goods_combination_ref`
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `goods_combination_ref`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRefExample">
    delete from `goods_combination_ref`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRef">
    insert into `goods_combination_ref` (`id`, `combination_code`, `single_code`, 
      `goods_count`, `is_deleted`, `create_by`, 
      `create_time`, `update_by`, `update_time`
      )
    values (#{id,jdbcType=BIGINT}, #{combinationCode,jdbcType=VARCHAR}, #{singleCode,jdbcType=VARCHAR}, 
      #{goodsCount,jdbcType=INTEGER}, #{isDeleted,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRef">
    insert into `goods_combination_ref`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="combinationCode != null">
        `combination_code`,
      </if>
      <if test="singleCode != null">
        `single_code`,
      </if>
      <if test="goodsCount != null">
        `goods_count`,
      </if>
      <if test="isDeleted != null">
        `is_deleted`,
      </if>
      <if test="createBy != null">
        `create_by`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="updateBy != null">
        `update_by`,
      </if>
      <if test="updateTime != null">
        `update_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="combinationCode != null">
        #{combinationCode,jdbcType=VARCHAR},
      </if>
      <if test="singleCode != null">
        #{singleCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsCount != null">
        #{goodsCount,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into `goods_combination_ref` (`id`, `combination_code`, `single_code`, 
      `goods_count`, `is_deleted`, `create_by`, 
      `create_time`, `update_by`, `update_time`
      )
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.combinationCode,jdbcType=VARCHAR}, #{item.singleCode,jdbcType=VARCHAR}, 
        #{item.goodsCount,jdbcType=INTEGER}, #{item.isDeleted,jdbcType=BIT}, #{item.createBy,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into `goods_combination_ref`
    (`id`, `combination_code`, `single_code`, `goods_count`,  `create_by`, `update_by`)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.combinationCode != null">
          #{item.combinationCode,jdbcType=VARCHAR},
        </if>
        <if test="item.combinationCode == null">
          NULL,
        </if>
        <if test="item.singleCode != null">
          #{item.singleCode,jdbcType=VARCHAR},
        </if>
        <if test="item.singleCode == null">
          NULL,
        </if>
        <if test="item.goodsCount != null">
          #{item.goodsCount,jdbcType=INTEGER},
        </if>
        <if test="item.goodsCount == null">
          NULL,
        </if>
        <if test="item.createBy != null">
          #{item.createBy,jdbcType=VARCHAR},
        </if>
        <if test="item.createBy == null">
          NULL,
        </if>
         
        <if test="item.updateBy != null">
          #{item.updateBy,jdbcType=VARCHAR},
        </if>
        <if test="item.updateBy == null">
          NULL,
        </if>
 
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRefExample" resultType="java.lang.Long">
    select count(*) from `goods_combination_ref`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `goods_combination_ref`
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.combinationCode != null">
        `combination_code` = #{record.combinationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.singleCode != null">
        `single_code` = #{record.singleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCount != null">
        `goods_count` = #{record.goodsCount,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        `is_deleted` = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.createBy != null">
        `create_by` = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        `update_by` = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        `update_time` = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `goods_combination_ref`
    set `id` = #{record.id,jdbcType=BIGINT},
      `combination_code` = #{record.combinationCode,jdbcType=VARCHAR},
      `single_code` = #{record.singleCode,jdbcType=VARCHAR},
      `goods_count` = #{record.goodsCount,jdbcType=INTEGER},
      `is_deleted` = #{record.isDeleted,jdbcType=BIT},
      `create_by` = #{record.createBy,jdbcType=VARCHAR},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      `update_by` = #{record.updateBy,jdbcType=VARCHAR},
      `update_time` = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRef">
    update `goods_combination_ref`
    <set>
      <if test="combinationCode != null">
        `combination_code` = #{combinationCode,jdbcType=VARCHAR},
      </if>
      <if test="singleCode != null">
        `single_code` = #{singleCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsCount != null">
        `goods_count` = #{goodsCount,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        `is_deleted` = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        `create_by` = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        `update_by` = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsCombinationRef">
    update `goods_combination_ref`
    set `combination_code` = #{combinationCode,jdbcType=VARCHAR},
      `single_code` = #{singleCode,jdbcType=VARCHAR},
      `goods_count` = #{goodsCount,jdbcType=INTEGER},
      `is_deleted` = #{isDeleted,jdbcType=BIT},
      `create_by` = #{createBy,jdbcType=VARCHAR},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `update_by` = #{updateBy,jdbcType=VARCHAR},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update `goods_combination_ref`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="combinationCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.combinationCode}
        </foreach>
      </trim>
      <trim prefix="singleCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.singleCode}
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsCount}
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.isDeleted}
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createBy}
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateBy}
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    where `id` in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update `goods_combination_ref`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="combinationCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.combinationCode != null ">
            when  #{item.id} then #{item.combinationCode}
          </if>
          <if test="item.combinationCode == null ">
            when  #{item.id} then `goods_combination_ref`.`combination_code`
          </if>
        </foreach>
      </trim>
      <trim prefix="singleCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.singleCode != null ">
            when  #{item.id} then #{item.singleCode}
          </if>
          <if test="item.singleCode == null ">
            when  #{item.id} then `goods_combination_ref`.`single_code`
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsCount != null ">
            when  #{item.id} then #{item.goodsCount}
          </if>
          <if test="item.goodsCount == null ">
            when  #{item.id} then `goods_combination_ref`.`goods_count`
          </if>
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.isDeleted != null ">
            when  #{item.id} then #{item.isDeleted}
          </if>
          <if test="item.isDeleted == null ">
            when  #{item.id} then `goods_combination_ref`.`is_deleted`
          </if>
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createBy != null ">
            when  #{item.id} then #{item.createBy}
          </if>
          <if test="item.createBy == null ">
            when  #{item.id} then `goods_combination_ref`.`create_by`
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then `goods_combination_ref`.`create_time`
          </if>
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateBy != null ">
            when  #{item.id} then #{item.updateBy}
          </if>
          <if test="item.updateBy == null ">
            when  #{item.id} then `goods_combination_ref`.`update_by`
          </if>
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then `goods_combination_ref`.`update_time`
          </if>
        </foreach>
      </trim>
    </trim>
    where `id` in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update `goods_combination_ref`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="combinationCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.combinationCode}
        </foreach>
      </trim>
      <trim prefix="singleCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.singleCode}
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsCount}
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.isDeleted}
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createBy}
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateBy}
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update `goods_combination_ref`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="combinationCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.combinationCode != null ">
            when  #{item.id} then #{item.combinationCode}
          </if>
          <if test="item.combinationCode == null ">
            when  #{item.id} then `goods_combination_ref`.`combination_code`
          </if>
        </foreach>
      </trim>
      <trim prefix="singleCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.singleCode != null ">
            when  #{item.id} then #{item.singleCode}
          </if>
          <if test="item.singleCode == null ">
            when  #{item.id} then `goods_combination_ref`.`single_code`
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsCount != null ">
            when  #{item.id} then #{item.goodsCount}
          </if>
          <if test="item.goodsCount == null ">
            when  #{item.id} then `goods_combination_ref`.`goods_count`
          </if>
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.isDeleted != null ">
            when  #{item.id} then #{item.isDeleted}
          </if>
          <if test="item.isDeleted == null ">
            when  #{item.id} then `goods_combination_ref`.`is_deleted`
          </if>
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createBy != null ">
            when  #{item.id} then #{item.createBy}
          </if>
          <if test="item.createBy == null ">
            when  #{item.id} then `goods_combination_ref`.`create_by`
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then `goods_combination_ref`.`create_time`
          </if>
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateBy != null ">
            when  #{item.id} then #{item.updateBy}
          </if>
          <if test="item.updateBy == null ">
            when  #{item.id} then `goods_combination_ref`.`update_by`
          </if>
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then `goods_combination_ref`.`update_time`
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>