<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milisong.breakfast.scm.goods.mapper.GoodsScheduleMapper">
  <resultMap id="BaseResultMap" type="com.milisong.breakfast.scm.goods.domain.GoodsSchedule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="shop_code" jdbcType="VARCHAR" property="shopCode" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="week_of_year" jdbcType="INTEGER" property="weekOfYear" />
    <result column="schedule_date" jdbcType="DATE" property="scheduleDate" />
    <result column="week" jdbcType="INTEGER" property="week" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shop_id, shop_code, shop_name, year, week_of_year, schedule_date, week, status, 
    publish_time, is_deleted, create_by, create_time, update_by, update_time
  </sql>
  <select id="selectByExample" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
   		limit #{startRow}, #{pageSize}
   	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_schedule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods_schedule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsScheduleExample">
    delete from goods_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsSchedule">
    insert into goods_schedule (id, shop_id, shop_code, 
      shop_name, year, week_of_year, 
      schedule_date, week, status, 
      publish_time, is_deleted, create_by, 
      create_time, update_by, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, #{shopCode,jdbcType=VARCHAR}, 
      #{shopName,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, #{weekOfYear,jdbcType=INTEGER}, 
      #{scheduleDate,jdbcType=DATE}, #{week,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsSchedule">
    insert into goods_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopCode != null">
        shop_code,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="weekOfYear != null">
        week_of_year,
      </if>
      <if test="scheduleDate != null">
        schedule_date,
      </if>
      <if test="week != null">
        week,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="shopCode != null">
        #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="weekOfYear != null">
        #{weekOfYear,jdbcType=INTEGER},
      </if>
      <if test="scheduleDate != null">
        #{scheduleDate,jdbcType=DATE},
      </if>
      <if test="week != null">
        #{week,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into goods_schedule (id, shop_id, shop_code, 
      shop_name, year, week_of_year, 
      schedule_date, week, status, 
      publish_time, is_deleted, create_by, 
      create_time, update_by, update_time
      )
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.shopId,jdbcType=BIGINT}, #{item.shopCode,jdbcType=VARCHAR}, 
        #{item.shopName,jdbcType=VARCHAR}, #{item.year,jdbcType=INTEGER}, #{item.weekOfYear,jdbcType=INTEGER}, 
        #{item.scheduleDate,jdbcType=DATE}, #{item.week,jdbcType=INTEGER}, #{item.status,jdbcType=BIT}, 
        #{item.publishTime,jdbcType=TIMESTAMP}, #{item.isDeleted,jdbcType=BIT}, #{item.createBy,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into goods_schedule
    (id, shop_id, shop_code, shop_name, year, week_of_year, schedule_date, week, status, 
      publish_time,  create_by, update_by)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.shopId != null">
          #{item.shopId,jdbcType=BIGINT},
        </if>
        <if test="item.shopId == null">
          NULL,
        </if>
        <if test="item.shopCode != null">
          #{item.shopCode,jdbcType=VARCHAR},
        </if>
        <if test="item.shopCode == null">
          NULL,
        </if>
        <if test="item.shopName != null">
          #{item.shopName,jdbcType=VARCHAR},
        </if>
        <if test="item.shopName == null">
          NULL,
        </if>
        <if test="item.year != null">
          #{item.year,jdbcType=INTEGER},
        </if>
        <if test="item.year == null">
          NULL,
        </if>
        <if test="item.weekOfYear != null">
          #{item.weekOfYear,jdbcType=INTEGER},
        </if>
        <if test="item.weekOfYear == null">
          NULL,
        </if>
        <if test="item.scheduleDate != null">
          #{item.scheduleDate,jdbcType=DATE},
        </if>
        <if test="item.scheduleDate == null">
          NULL,
        </if>
        <if test="item.week != null">
          #{item.week,jdbcType=INTEGER},
        </if>
        <if test="item.week == null">
          NULL,
        </if>
        <if test="item.status != null">
          #{item.status,jdbcType=BIT},
        </if>
        <if test="item.status == null">
          NULL,
        </if>
        <if test="item.publishTime != null">
          #{item.publishTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.publishTime == null">
          NULL,
        </if>
        <if test="item.createBy != null">
          #{item.createBy,jdbcType=VARCHAR},
        </if>
        <if test="item.createBy == null">
          NULL,
        </if>
        <if test="item.updateBy != null">
          #{item.updateBy,jdbcType=VARCHAR},
        </if>
        <if test="item.updateBy == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsScheduleExample" resultType="java.lang.Long">
    select count(*) from goods_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.shopCode != null">
        shop_code = #{record.shopCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.weekOfYear != null">
        week_of_year = #{record.weekOfYear,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleDate != null">
        schedule_date = #{record.scheduleDate,jdbcType=DATE},
      </if>
      <if test="record.week != null">
        week = #{record.week,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_schedule
    set id = #{record.id,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      shop_code = #{record.shopCode,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      week_of_year = #{record.weekOfYear,jdbcType=INTEGER},
      schedule_date = #{record.scheduleDate,jdbcType=DATE},
      week = #{record.week,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsSchedule">
    update goods_schedule
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="shopCode != null">
        shop_code = #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="weekOfYear != null">
        week_of_year = #{weekOfYear,jdbcType=INTEGER},
      </if>
      <if test="scheduleDate != null">
        schedule_date = #{scheduleDate,jdbcType=DATE},
      </if>
      <if test="week != null">
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milisong.breakfast.scm.goods.domain.GoodsSchedule">
    update goods_schedule
    set shop_id = #{shopId,jdbcType=BIGINT},
      shop_code = #{shopCode,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      week_of_year = #{weekOfYear,jdbcType=INTEGER},
      schedule_date = #{scheduleDate,jdbcType=DATE},
      week = #{week,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update goods_schedule
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="shopId =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.shopId}
        </foreach>
      </trim>
      <trim prefix="shopCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.shopCode}
        </foreach>
      </trim>
      <trim prefix="shopName =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.shopName}
        </foreach>
      </trim>
      <trim prefix="year =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.year}
        </foreach>
      </trim>
      <trim prefix="weekOfYear =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.weekOfYear}
        </foreach>
      </trim>
      <trim prefix="scheduleDate =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.scheduleDate}
        </foreach>
      </trim>
      <trim prefix="week =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.week}
        </foreach>
      </trim>
      <trim prefix="status =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.status}
        </foreach>
      </trim>
      <trim prefix="publishTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.publishTime}
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.isDeleted}
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createBy}
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateBy}
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update goods_schedule
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="shopId =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.shopId != null ">
            when  #{item.id} then #{item.shopId}
          </if>
          <if test="item.shopId == null ">
            when  #{item.id} then goods_schedule.shop_id
          </if>
        </foreach>
      </trim>
      <trim prefix="shopCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.shopCode != null ">
            when  #{item.id} then #{item.shopCode}
          </if>
          <if test="item.shopCode == null ">
            when  #{item.id} then goods_schedule.shop_code
          </if>
        </foreach>
      </trim>
      <trim prefix="shopName =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.shopName != null ">
            when  #{item.id} then #{item.shopName}
          </if>
          <if test="item.shopName == null ">
            when  #{item.id} then goods_schedule.shop_name
          </if>
        </foreach>
      </trim>
      <trim prefix="year =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.year != null ">
            when  #{item.id} then #{item.year}
          </if>
          <if test="item.year == null ">
            when  #{item.id} then goods_schedule.year
          </if>
        </foreach>
      </trim>
      <trim prefix="weekOfYear =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.weekOfYear != null ">
            when  #{item.id} then #{item.weekOfYear}
          </if>
          <if test="item.weekOfYear == null ">
            when  #{item.id} then goods_schedule.week_of_year
          </if>
        </foreach>
      </trim>
      <trim prefix="scheduleDate =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.scheduleDate != null ">
            when  #{item.id} then #{item.scheduleDate}
          </if>
          <if test="item.scheduleDate == null ">
            when  #{item.id} then goods_schedule.schedule_date
          </if>
        </foreach>
      </trim>
      <trim prefix="week =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.week != null ">
            when  #{item.id} then #{item.week}
          </if>
          <if test="item.week == null ">
            when  #{item.id} then goods_schedule.week
          </if>
        </foreach>
      </trim>
      <trim prefix="status =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.status != null ">
            when  #{item.id} then #{item.status}
          </if>
          <if test="item.status == null ">
            when  #{item.id} then goods_schedule.status
          </if>
        </foreach>
      </trim>
      <trim prefix="publishTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.publishTime != null ">
            when  #{item.id} then #{item.publishTime}
          </if>
          <if test="item.publishTime == null ">
            when  #{item.id} then goods_schedule.publish_time
          </if>
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.isDeleted != null ">
            when  #{item.id} then #{item.isDeleted}
          </if>
          <if test="item.isDeleted == null ">
            when  #{item.id} then goods_schedule.is_deleted
          </if>
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createBy != null ">
            when  #{item.id} then #{item.createBy}
          </if>
          <if test="item.createBy == null ">
            when  #{item.id} then goods_schedule.create_by
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then goods_schedule.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateBy != null ">
            when  #{item.id} then #{item.updateBy}
          </if>
          <if test="item.updateBy == null ">
            when  #{item.id} then goods_schedule.update_by
          </if>
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then goods_schedule.update_time
          </if>
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update goods_schedule
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="shopId =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.shopId}
        </foreach>
      </trim>
      <trim prefix="shopCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.shopCode}
        </foreach>
      </trim>
      <trim prefix="shopName =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.shopName}
        </foreach>
      </trim>
      <trim prefix="year =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.year}
        </foreach>
      </trim>
      <trim prefix="weekOfYear =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.weekOfYear}
        </foreach>
      </trim>
      <trim prefix="scheduleDate =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.scheduleDate}
        </foreach>
      </trim>
      <trim prefix="week =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.week}
        </foreach>
      </trim>
      <trim prefix="status =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.status}
        </foreach>
      </trim>
      <trim prefix="publishTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.publishTime}
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.isDeleted}
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createBy}
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateBy}
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update goods_schedule
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="shopId =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.shopId != null ">
            when  #{item.id} then #{item.shopId}
          </if>
          <if test="item.shopId == null ">
            when  #{item.id} then goods_schedule.shop_id
          </if>
        </foreach>
      </trim>
      <trim prefix="shopCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.shopCode != null ">
            when  #{item.id} then #{item.shopCode}
          </if>
          <if test="item.shopCode == null ">
            when  #{item.id} then goods_schedule.shop_code
          </if>
        </foreach>
      </trim>
      <trim prefix="shopName =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.shopName != null ">
            when  #{item.id} then #{item.shopName}
          </if>
          <if test="item.shopName == null ">
            when  #{item.id} then goods_schedule.shop_name
          </if>
        </foreach>
      </trim>
      <trim prefix="year =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.year != null ">
            when  #{item.id} then #{item.year}
          </if>
          <if test="item.year == null ">
            when  #{item.id} then goods_schedule.year
          </if>
        </foreach>
      </trim>
      <trim prefix="weekOfYear =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.weekOfYear != null ">
            when  #{item.id} then #{item.weekOfYear}
          </if>
          <if test="item.weekOfYear == null ">
            when  #{item.id} then goods_schedule.week_of_year
          </if>
        </foreach>
      </trim>
      <trim prefix="scheduleDate =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.scheduleDate != null ">
            when  #{item.id} then #{item.scheduleDate}
          </if>
          <if test="item.scheduleDate == null ">
            when  #{item.id} then goods_schedule.schedule_date
          </if>
        </foreach>
      </trim>
      <trim prefix="week =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.week != null ">
            when  #{item.id} then #{item.week}
          </if>
          <if test="item.week == null ">
            when  #{item.id} then goods_schedule.week
          </if>
        </foreach>
      </trim>
      <trim prefix="status =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.status != null ">
            when  #{item.id} then #{item.status}
          </if>
          <if test="item.status == null ">
            when  #{item.id} then goods_schedule.status
          </if>
        </foreach>
      </trim>
      <trim prefix="publishTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.publishTime != null ">
            when  #{item.id} then #{item.publishTime}
          </if>
          <if test="item.publishTime == null ">
            when  #{item.id} then goods_schedule.publish_time
          </if>
        </foreach>
      </trim>
      <trim prefix="isDeleted =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.isDeleted != null ">
            when  #{item.id} then #{item.isDeleted}
          </if>
          <if test="item.isDeleted == null ">
            when  #{item.id} then goods_schedule.is_deleted
          </if>
        </foreach>
      </trim>
      <trim prefix="createBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createBy != null ">
            when  #{item.id} then #{item.createBy}
          </if>
          <if test="item.createBy == null ">
            when  #{item.id} then goods_schedule.create_by
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then goods_schedule.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="updateBy =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateBy != null ">
            when  #{item.id} then #{item.updateBy}
          </if>
          <if test="item.updateBy == null ">
            when  #{item.id} then goods_schedule.update_by
          </if>
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then goods_schedule.update_time
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>