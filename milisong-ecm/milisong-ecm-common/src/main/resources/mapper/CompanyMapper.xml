<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milisong.ecm.common.user.mapper.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.milisong.ecm.common.user.domain.Company">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="abbreviation" jdbcType="VARCHAR" property="abbreviation" />
    <result column="building_id" jdbcType="BIGINT" property="buildingId" />
    <result column="building_abbreviation" jdbcType="VARCHAR" property="buildingAbbreviation" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="room_number" jdbcType="VARCHAR" property="roomNumber" />
    <result column="employees_number" jdbcType="INTEGER" property="employeesNumber" />
    <result column="is_certification" jdbcType="BIT" property="isCertification" />
    <result column="is_same_name" jdbcType="BIT" property="isSameName" />
    <result column="same_name" jdbcType="VARCHAR" property="sameName" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, abbreviation, building_id, building_abbreviation, floor, room_number, employees_number, 
    is_certification, is_same_name, same_name, is_deleted, create_by, create_time, update_by, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_company
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.milisong.ecm.common.user.domain.Company">
    insert into t_company (id, name, abbreviation, 
      building_id, building_abbreviation, floor, 
      room_number, employees_number, is_certification, 
      is_same_name, same_name, is_deleted, 
      create_by, create_time, update_by, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{abbreviation,jdbcType=VARCHAR}, 
      #{buildingId,jdbcType=BIGINT}, #{buildingAbbreviation,jdbcType=VARCHAR}, #{floor,jdbcType=VARCHAR}, 
      #{roomNumber,jdbcType=VARCHAR}, #{employeesNumber,jdbcType=INTEGER}, #{isCertification,jdbcType=BIT}, 
      #{isSameName,jdbcType=BIT}, #{sameName,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.ecm.common.user.domain.Company">
    insert into t_company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="abbreviation != null">
        abbreviation,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="buildingAbbreviation != null">
        building_abbreviation,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="roomNumber != null">
        room_number,
      </if>
      <if test="employeesNumber != null">
        employees_number,
      </if>
      <if test="isCertification != null">
        is_certification,
      </if>
      <if test="isSameName != null">
        is_same_name,
      </if>
      <if test="sameName != null">
        same_name,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null">
        #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="buildingAbbreviation != null">
        #{buildingAbbreviation,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null">
        #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeesNumber != null">
        #{employeesNumber,jdbcType=INTEGER},
      </if>
      <if test="isCertification != null">
        #{isCertification,jdbcType=BIT},
      </if>
      <if test="isSameName != null">
        #{isSameName,jdbcType=BIT},
      </if>
      <if test="sameName != null">
        #{sameName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.milisong.ecm.common.user.domain.Company">
    update t_company
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null">
        abbreviation = #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="buildingAbbreviation != null">
        building_abbreviation = #{buildingAbbreviation,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="roomNumber != null">
        room_number = #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeesNumber != null">
        employees_number = #{employeesNumber,jdbcType=INTEGER},
      </if>
      <if test="isCertification != null">
        is_certification = #{isCertification,jdbcType=BIT},
      </if>
      <if test="isSameName != null">
        is_same_name = #{isSameName,jdbcType=BIT},
      </if>
      <if test="sameName != null">
        same_name = #{sameName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milisong.ecm.common.user.domain.Company">
    update t_company
    set name = #{name,jdbcType=VARCHAR},
      abbreviation = #{abbreviation,jdbcType=VARCHAR},
      building_id = #{buildingId,jdbcType=BIGINT},
      building_abbreviation = #{buildingAbbreviation,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      room_number = #{roomNumber,jdbcType=VARCHAR},
      employees_number = #{employeesNumber,jdbcType=INTEGER},
      is_certification = #{isCertification,jdbcType=BIT},
      is_same_name = #{isSameName,jdbcType=BIT},
      same_name = #{sameName,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>