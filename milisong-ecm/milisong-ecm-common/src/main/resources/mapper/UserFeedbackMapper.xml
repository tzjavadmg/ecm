<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.milisong.ecm.common.user.mapper.UserFeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.milisong.ecm.common.user.domain.UserFeedback" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="mobile_no" property="mobileNo" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="feedback_type" property="feedbackType" jdbcType="BIGINT" />
    <result column="feedback_opinion" property="feedbackOpinion" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="TINYINT" />
    <result column="business_line" property="businessLine" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, nick_name, mobile_no, order_id, order_no, feedback_type, feedback_opinion, 
    grade, business_line, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user_feedback
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.milisong.ecm.common.user.domain.UserFeedback" >
    insert into t_user_feedback (id, user_id, nick_name, 
      mobile_no, order_id, order_no, 
      feedback_type, feedback_opinion, grade, business_line,
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, 
      #{mobileNo,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR},
      #{feedbackType,jdbcType=BIGINT}, #{feedbackOpinion,jdbcType=VARCHAR}, #{grade,jdbcType=TINYINT}, #{businessLine,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.ecm.common.user.domain.UserFeedback" >
    insert into t_user_feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="mobileNo != null" >
        mobile_no,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="feedbackType != null" >
        feedback_type,
      </if>
      <if test="feedbackOpinion != null" >
        feedback_opinion,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="businessLine != null" >
        business_line,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="mobileNo != null" >
        #{mobileNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="feedbackType != null" >
        #{feedbackType,jdbcType=BIGINT},
      </if>
      <if test="feedbackOpinion != null" >
        #{feedbackOpinion,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=TINYINT},
      </if>
      <if test="businessLine != null" >
        #{businessLine,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.milisong.ecm.common.user.domain.UserFeedback" >
    update t_user_feedback
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="mobileNo != null" >
        mobile_no = #{mobileNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="feedbackType != null" >
        feedback_type = #{feedbackType,jdbcType=BIGINT},
      </if>
      <if test="feedbackOpinion != null" >
        feedback_opinion = #{feedbackOpinion,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=TINYINT},
      </if>
      <if test="businessLine != null" >
        business_line = #{businessLine,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milisong.ecm.common.user.domain.UserFeedback" >
    update t_user_feedback
    set user_id = #{userId,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      mobile_no = #{mobileNo,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      feedback_type = #{feedbackType,jdbcType=BIGINT},
      feedback_opinion = #{feedbackOpinion,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=TINYINT},
      business_line = #{businessLine,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>