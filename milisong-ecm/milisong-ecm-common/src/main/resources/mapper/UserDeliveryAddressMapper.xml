<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milisong.ecm.common.user.mapper.UserDeliveryAddressMapper">
  <resultMap id="BaseResultMap" type="com.milisong.ecm.common.user.domain.UserDeliveryAddress" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="mobile_no" property="mobileNo" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="delivery_office_building_id" property="deliveryOfficeBuildingId" jdbcType="BIGINT" />
    <result column="delivery_company" property="deliveryCompany" jdbcType="VARCHAR" />
    <result column="delivery_address" property="deliveryAddress" jdbcType="VARCHAR" />
    <result column="delivery_floor" property="deliveryFloor" jdbcType="VARCHAR" />
    <result column="delivery_room" property="deliveryRoom" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="notify_type" property="notifyType" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, real_name, mobile_no, sex, delivery_office_building_id, delivery_company,
    delivery_address, delivery_floor, delivery_room, create_time, update_time,notify_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_user_delivery_address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.milisong.ecm.common.user.domain.UserDeliveryAddress" >
    insert into t_user_delivery_address (id, user_id, real_name,
    mobile_no, sex, delivery_office_building_id,
    delivery_company, delivery_address, delivery_floor,
    delivery_room, create_time, update_time
    )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR},
    #{mobileNo,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{deliveryOfficeBuildingId,jdbcType=BIGINT},
    #{deliveryCompany,jdbcType=VARCHAR}, #{deliveryAddress,jdbcType=VARCHAR}, #{deliveryFloor,jdbcType=VARCHAR},
    #{deliveryRoom,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.ecm.common.user.domain.UserDeliveryAddress" >
    insert into t_user_delivery_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="mobileNo != null" >
        mobile_no,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="deliveryOfficeBuildingId != null" >
        delivery_office_building_id,
      </if>
      <if test="deliveryCompany != null" >
        delivery_company,
      </if>
      <if test="deliveryAddress != null" >
        delivery_address,
      </if>
      <if test="deliveryFloor != null" >
        delivery_floor,
      </if>
      <if test="deliveryRoom != null" >
        delivery_room,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="mobileNo != null" >
        #{mobileNo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="deliveryOfficeBuildingId != null" >
        #{deliveryOfficeBuildingId,jdbcType=BIGINT},
      </if>
      <if test="deliveryCompany != null" >
        #{deliveryCompany,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAddress != null" >
        #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="deliveryFloor != null" >
        #{deliveryFloor,jdbcType=VARCHAR},
      </if>
      <if test="deliveryRoom != null" >
        #{deliveryRoom,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.milisong.ecm.common.user.domain.UserDeliveryAddress" >
    update t_user_delivery_address
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="mobileNo != null" >
        mobile_no = #{mobileNo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="deliveryOfficeBuildingId != null" >
        delivery_office_building_id = #{deliveryOfficeBuildingId,jdbcType=BIGINT},
      </if>
      <if test="deliveryCompany != null" >
        delivery_company = #{deliveryCompany,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAddress != null" >
        delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="deliveryFloor != null" >
        delivery_floor = #{deliveryFloor,jdbcType=VARCHAR},
      </if>
      <if test="deliveryRoom != null" >
        delivery_room = #{deliveryRoom,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="notifyType != null">
      	notify_type = #{notifyType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milisong.ecm.common.user.domain.UserDeliveryAddress" >
    update t_user_delivery_address
    set user_id = #{userId,jdbcType=BIGINT},
    real_name = #{realName,jdbcType=VARCHAR},
    mobile_no = #{mobileNo,jdbcType=VARCHAR},
    sex = #{sex,jdbcType=TINYINT},
    delivery_office_building_id = #{deliveryOfficeBuildingId,jdbcType=BIGINT},
    delivery_company = #{deliveryCompany,jdbcType=VARCHAR},
    delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
    delivery_floor = #{deliveryFloor,jdbcType=VARCHAR},
    delivery_room = #{deliveryRoom,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByUserid" resultType="com.milisong.ecm.common.user.domain.UserDeliveryAddress">
    select
    <include refid="Base_Column_List" />
    from t_user_delivery_address
    where user_id = #{userId,jdbcType=BIGINT}
    <if test = "deliveryOfficeBuildingId!=null">
      and delivery_office_building_id = #{deliveryOfficeBuildingId,jdbcType=BIGINT}
    </if>
    order by update_time desc limit 1
  </select>

  <select id="selectDeliveryAddrByManyWhere" resultType="com.milisong.ecm.common.user.domain.UserDeliveryAddress">
    select
    <include refid="Base_Column_List" />
    from t_user_delivery_address
    where mobile_no = #{mobileNo}
    and delivery_office_building_id = #{deliveryOfficeBuildingId}
    and delivery_floor = #{deliveryFloor}
    and delivery_company = #{deliveryCompany}
  </select>

  <select id="selectByMobile" resultType="com.milisong.ecm.common.user.domain.UserDeliveryAddress">
    select
    <include refid="Base_Column_List" />
    from t_user_delivery_address
    where mobile_no = #{mobile,jdbcType=VARCHAR}
    order by id desc limit 1
  </select>
  
  <update id="updateFloorByCondition" parameterType="map">
  	UPDATE `t_user_delivery_address` SET `delivery_floor` =  #{afterFloor}
  	WHERE `delivery_office_building_id` = #{deliveryOfficeBuildingId} AND `delivery_floor` = #{frontFloor}
  </update>
  
  <select id="selectUserIdByCondtion" resultType="com.milisong.ecm.common.user.domain.UserDeliveryAddress" parameterType="map">
  	SELECT `user_id` FROM `t_user_delivery_address` WHERE `delivery_floor` = #{frontFloor} AND `delivery_office_building_id` = #{deliveryOfficeBuildingId}
  </select>
</mapper>
