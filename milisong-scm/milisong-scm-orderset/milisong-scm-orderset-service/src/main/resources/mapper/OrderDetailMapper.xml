<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milisong.scm.orderset.mapper.OrderDetailMapper">
  <resultMap id="BaseResultMap" type="com.milisong.scm.orderset.domain.OrderDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="goods_code" jdbcType="VARCHAR" property="goodsCode" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_count" jdbcType="INTEGER" property="goodsCount" />
    <result column="goods_discount_price" jdbcType="DECIMAL" property="goodsDiscountPrice" />
    <result column="actual_pay_amount" jdbcType="DECIMAL" property="actualPayAmount" />
    <result column="delivery_cost_amount" jdbcType="DECIMAL" property="deliveryCostAmount" />
    <result column="package_amount" jdbcType="DECIMAL" property="packageAmount" />
    <result column="red_packet_amount" jdbcType="DECIMAL" property="redPacketAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, order_no, goods_code, goods_name, goods_price, goods_count, goods_discount_price, 
    actual_pay_amount, delivery_cost_amount, package_amount, red_packet_amount, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.milisong.scm.orderset.domain.OrderDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_order_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.milisong.scm.orderset.domain.OrderDetailExample">
    delete from t_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.milisong.scm.orderset.domain.OrderDetail">
    insert into t_order_detail (id, order_id, order_no, 
      goods_code, goods_name, goods_price, 
      goods_count, goods_discount_price, actual_pay_amount, 
      delivery_cost_amount, package_amount, red_packet_amount, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, 
      #{goodsCode,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, 
      #{goodsCount,jdbcType=INTEGER}, #{goodsDiscountPrice,jdbcType=DECIMAL}, #{actualPayAmount,jdbcType=DECIMAL}, 
      #{deliveryCostAmount,jdbcType=DECIMAL}, #{packageAmount,jdbcType=DECIMAL}, #{redPacketAmount,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.scm.orderset.domain.OrderDetail">
    insert into t_order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="goodsCode != null">
        goods_code,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsCount != null">
        goods_count,
      </if>
      <if test="goodsDiscountPrice != null">
        goods_discount_price,
      </if>
      <if test="actualPayAmount != null">
        actual_pay_amount,
      </if>
      <if test="deliveryCostAmount != null">
        delivery_cost_amount,
      </if>
      <if test="packageAmount != null">
        package_amount,
      </if>
      <if test="redPacketAmount != null">
        red_packet_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null">
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsCount != null">
        #{goodsCount,jdbcType=INTEGER},
      </if>
      <if test="goodsDiscountPrice != null">
        #{goodsDiscountPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualPayAmount != null">
        #{actualPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryCostAmount != null">
        #{deliveryCostAmount,jdbcType=DECIMAL},
      </if>
      <if test="packageAmount != null">
        #{packageAmount,jdbcType=DECIMAL},
      </if>
      <if test="redPacketAmount != null">
        #{redPacketAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into t_order_detail (id, order_id, order_no, 
      goods_code, goods_name, goods_price, 
      goods_count, goods_discount_price, 
      actual_pay_amount, delivery_cost_amount, 
      package_amount, red_packet_amount, 
      create_time, update_time)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.orderId,jdbcType=BIGINT}, #{item.orderNo,jdbcType=VARCHAR}, 
        #{item.goodsCode,jdbcType=VARCHAR}, #{item.goodsName,jdbcType=VARCHAR}, #{item.goodsPrice,jdbcType=DECIMAL}, 
        #{item.goodsCount,jdbcType=INTEGER}, #{item.goodsDiscountPrice,jdbcType=DECIMAL}, 
        #{item.actualPayAmount,jdbcType=DECIMAL}, #{item.deliveryCostAmount,jdbcType=DECIMAL}, 
        #{item.packageAmount,jdbcType=DECIMAL}, #{item.redPacketAmount,jdbcType=DECIMAL}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into t_order_detail
    (id, order_id, order_no, goods_code, goods_name, goods_price, goods_count, goods_discount_price, 
      actual_pay_amount, delivery_cost_amount, package_amount, red_packet_amount, create_time, 
      update_time)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.orderId != null">
          #{item.orderId,jdbcType=BIGINT},
        </if>
        <if test="item.orderId == null">
          NULL,
        </if>
        <if test="item.orderNo != null">
          #{item.orderNo,jdbcType=VARCHAR},
        </if>
        <if test="item.orderNo == null">
          NULL,
        </if>
        <if test="item.goodsCode != null">
          #{item.goodsCode,jdbcType=VARCHAR},
        </if>
        <if test="item.goodsCode == null">
          NULL,
        </if>
        <if test="item.goodsName != null">
          #{item.goodsName,jdbcType=VARCHAR},
        </if>
        <if test="item.goodsName == null">
          NULL,
        </if>
        <if test="item.goodsPrice != null">
          #{item.goodsPrice,jdbcType=DECIMAL},
        </if>
        <if test="item.goodsPrice == null">
          NULL,
        </if>
        <if test="item.goodsCount != null">
          #{item.goodsCount,jdbcType=INTEGER},
        </if>
        <if test="item.goodsCount == null">
          NULL,
        </if>
        <if test="item.goodsDiscountPrice != null">
          #{item.goodsDiscountPrice,jdbcType=DECIMAL},
        </if>
        <if test="item.goodsDiscountPrice == null">
          NULL,
        </if>
        <if test="item.actualPayAmount != null">
          #{item.actualPayAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.actualPayAmount == null">
          NULL,
        </if>
        <if test="item.deliveryCostAmount != null">
          #{item.deliveryCostAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.deliveryCostAmount == null">
          NULL,
        </if>
        <if test="item.packageAmount != null">
          #{item.packageAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.packageAmount == null">
          NULL,
        </if>
        <if test="item.redPacketAmount != null">
          #{item.redPacketAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.redPacketAmount == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
        <if test="item.updateTime != null">
          #{item.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateTime == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.milisong.scm.orderset.domain.OrderDetailExample" resultType="java.lang.Long">
    select count(*) from t_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCode != null">
        goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsCount != null">
        goods_count = #{record.goodsCount,jdbcType=INTEGER},
      </if>
      <if test="record.goodsDiscountPrice != null">
        goods_discount_price = #{record.goodsDiscountPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.actualPayAmount != null">
        actual_pay_amount = #{record.actualPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deliveryCostAmount != null">
        delivery_cost_amount = #{record.deliveryCostAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.packageAmount != null">
        package_amount = #{record.packageAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.redPacketAmount != null">
        red_packet_amount = #{record.redPacketAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order_detail
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_count = #{record.goodsCount,jdbcType=INTEGER},
      goods_discount_price = #{record.goodsDiscountPrice,jdbcType=DECIMAL},
      actual_pay_amount = #{record.actualPayAmount,jdbcType=DECIMAL},
      delivery_cost_amount = #{record.deliveryCostAmount,jdbcType=DECIMAL},
      package_amount = #{record.packageAmount,jdbcType=DECIMAL},
      red_packet_amount = #{record.redPacketAmount,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.milisong.scm.orderset.domain.OrderDetail">
    update t_order_detail
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null">
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsCount != null">
        goods_count = #{goodsCount,jdbcType=INTEGER},
      </if>
      <if test="goodsDiscountPrice != null">
        goods_discount_price = #{goodsDiscountPrice,jdbcType=DECIMAL},
      </if>
      <if test="actualPayAmount != null">
        actual_pay_amount = #{actualPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryCostAmount != null">
        delivery_cost_amount = #{deliveryCostAmount,jdbcType=DECIMAL},
      </if>
      <if test="packageAmount != null">
        package_amount = #{packageAmount,jdbcType=DECIMAL},
      </if>
      <if test="redPacketAmount != null">
        red_packet_amount = #{redPacketAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milisong.scm.orderset.domain.OrderDetail">
    update t_order_detail
    set order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      goods_code = #{goodsCode,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_count = #{goodsCount,jdbcType=INTEGER},
      goods_discount_price = #{goodsDiscountPrice,jdbcType=DECIMAL},
      actual_pay_amount = #{actualPayAmount,jdbcType=DECIMAL},
      delivery_cost_amount = #{deliveryCostAmount,jdbcType=DECIMAL},
      package_amount = #{packageAmount,jdbcType=DECIMAL},
      red_packet_amount = #{redPacketAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update t_order_detail
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="orderId =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.orderId}
        </foreach>
      </trim>
      <trim prefix="orderNo =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.orderNo}
        </foreach>
      </trim>
      <trim prefix="goodsCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsCode}
        </foreach>
      </trim>
      <trim prefix="goodsName =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsName}
        </foreach>
      </trim>
      <trim prefix="goodsPrice =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsPrice}
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsCount}
        </foreach>
      </trim>
      <trim prefix="goodsDiscountPrice =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsDiscountPrice}
        </foreach>
      </trim>
      <trim prefix="actualPayAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.actualPayAmount}
        </foreach>
      </trim>
      <trim prefix="deliveryCostAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.deliveryCostAmount}
        </foreach>
      </trim>
      <trim prefix="packageAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.packageAmount}
        </foreach>
      </trim>
      <trim prefix="redPacketAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.redPacketAmount}
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update t_order_detail
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="orderId =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.orderId != null ">
            when  #{item.id} then #{item.orderId}
          </if>
          <if test="item.orderId == null ">
            when  #{item.id} then t_order_detail.order_id
          </if>
        </foreach>
      </trim>
      <trim prefix="orderNo =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.orderNo != null ">
            when  #{item.id} then #{item.orderNo}
          </if>
          <if test="item.orderNo == null ">
            when  #{item.id} then t_order_detail.order_no
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsCode =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsCode != null ">
            when  #{item.id} then #{item.goodsCode}
          </if>
          <if test="item.goodsCode == null ">
            when  #{item.id} then t_order_detail.goods_code
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsName =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsName != null ">
            when  #{item.id} then #{item.goodsName}
          </if>
          <if test="item.goodsName == null ">
            when  #{item.id} then t_order_detail.goods_name
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsPrice =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsPrice != null ">
            when  #{item.id} then #{item.goodsPrice}
          </if>
          <if test="item.goodsPrice == null ">
            when  #{item.id} then t_order_detail.goods_price
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsCount != null ">
            when  #{item.id} then #{item.goodsCount}
          </if>
          <if test="item.goodsCount == null ">
            when  #{item.id} then t_order_detail.goods_count
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsDiscountPrice =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.goodsDiscountPrice != null ">
            when  #{item.id} then #{item.goodsDiscountPrice}
          </if>
          <if test="item.goodsDiscountPrice == null ">
            when  #{item.id} then t_order_detail.goods_discount_price
          </if>
        </foreach>
      </trim>
      <trim prefix="actualPayAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.actualPayAmount != null ">
            when  #{item.id} then #{item.actualPayAmount}
          </if>
          <if test="item.actualPayAmount == null ">
            when  #{item.id} then t_order_detail.actual_pay_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="deliveryCostAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.deliveryCostAmount != null ">
            when  #{item.id} then #{item.deliveryCostAmount}
          </if>
          <if test="item.deliveryCostAmount == null ">
            when  #{item.id} then t_order_detail.delivery_cost_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="packageAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.packageAmount != null ">
            when  #{item.id} then #{item.packageAmount}
          </if>
          <if test="item.packageAmount == null ">
            when  #{item.id} then t_order_detail.package_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="redPacketAmount =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.redPacketAmount != null ">
            when  #{item.id} then #{item.redPacketAmount}
          </if>
          <if test="item.redPacketAmount == null ">
            when  #{item.id} then t_order_detail.red_packet_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then t_order_detail.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then t_order_detail.update_time
          </if>
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update t_order_detail
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="orderId =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.orderId}
        </foreach>
      </trim>
      <trim prefix="orderNo =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.orderNo}
        </foreach>
      </trim>
      <trim prefix="goodsCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsCode}
        </foreach>
      </trim>
      <trim prefix="goodsName =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsName}
        </foreach>
      </trim>
      <trim prefix="goodsPrice =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsPrice}
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsCount}
        </foreach>
      </trim>
      <trim prefix="goodsDiscountPrice =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.goodsDiscountPrice}
        </foreach>
      </trim>
      <trim prefix="actualPayAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.actualPayAmount}
        </foreach>
      </trim>
      <trim prefix="deliveryCostAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.deliveryCostAmount}
        </foreach>
      </trim>
      <trim prefix="packageAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.packageAmount}
        </foreach>
      </trim>
      <trim prefix="redPacketAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.redPacketAmount}
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update t_order_detail
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="orderId =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.orderId != null ">
            when  #{item.id} then #{item.orderId}
          </if>
          <if test="item.orderId == null ">
            when  #{item.id} then t_order_detail.order_id
          </if>
        </foreach>
      </trim>
      <trim prefix="orderNo =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.orderNo != null ">
            when  #{item.id} then #{item.orderNo}
          </if>
          <if test="item.orderNo == null ">
            when  #{item.id} then t_order_detail.order_no
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsCode =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsCode != null ">
            when  #{item.id} then #{item.goodsCode}
          </if>
          <if test="item.goodsCode == null ">
            when  #{item.id} then t_order_detail.goods_code
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsName =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsName != null ">
            when  #{item.id} then #{item.goodsName}
          </if>
          <if test="item.goodsName == null ">
            when  #{item.id} then t_order_detail.goods_name
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsPrice =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsPrice != null ">
            when  #{item.id} then #{item.goodsPrice}
          </if>
          <if test="item.goodsPrice == null ">
            when  #{item.id} then t_order_detail.goods_price
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsCount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsCount != null ">
            when  #{item.id} then #{item.goodsCount}
          </if>
          <if test="item.goodsCount == null ">
            when  #{item.id} then t_order_detail.goods_count
          </if>
        </foreach>
      </trim>
      <trim prefix="goodsDiscountPrice =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.goodsDiscountPrice != null ">
            when  #{item.id} then #{item.goodsDiscountPrice}
          </if>
          <if test="item.goodsDiscountPrice == null ">
            when  #{item.id} then t_order_detail.goods_discount_price
          </if>
        </foreach>
      </trim>
      <trim prefix="actualPayAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.actualPayAmount != null ">
            when  #{item.id} then #{item.actualPayAmount}
          </if>
          <if test="item.actualPayAmount == null ">
            when  #{item.id} then t_order_detail.actual_pay_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="deliveryCostAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.deliveryCostAmount != null ">
            when  #{item.id} then #{item.deliveryCostAmount}
          </if>
          <if test="item.deliveryCostAmount == null ">
            when  #{item.id} then t_order_detail.delivery_cost_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="packageAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.packageAmount != null ">
            when  #{item.id} then #{item.packageAmount}
          </if>
          <if test="item.packageAmount == null ">
            when  #{item.id} then t_order_detail.package_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="redPacketAmount =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.redPacketAmount != null ">
            when  #{item.id} then #{item.redPacketAmount}
          </if>
          <if test="item.redPacketAmount == null ">
            when  #{item.id} then t_order_detail.red_packet_amount
          </if>
        </foreach>
      </trim>
      <trim prefix="createTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then t_order_detail.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="updateTime =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then t_order_detail.update_time
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>