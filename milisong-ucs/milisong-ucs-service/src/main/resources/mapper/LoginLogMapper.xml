<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.milisong.ucs.mapper.LoginLogMapper">
  <resultMap id="BaseResultMap" type="com.milisong.ucs.domain.LoginLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="mobile_no" jdbcType="VARCHAR" property="mobileNo" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="session" jdbcType="VARCHAR" property="session" />
    <result column="ip_addr" jdbcType="VARCHAR" property="ipAddr" />
    <result column="client_type" jdbcType="VARCHAR" property="clientType" />
    <result column="business_line" jdbcType="TINYINT" property="businessLine" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <insert id="insert" parameterType="com.milisong.ucs.domain.LoginLog">
    insert into t_login_log (id, user_id, nick_name,
      mobile_no, open_id, `session`,
      ip_addr, client_type, business_line, create_time,
      update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR},
      #{mobileNo,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{session,jdbcType=VARCHAR},
      #{ipAddr,jdbcType=VARCHAR}, #{clientType,jdbcType=VARCHAR}, #{businessLine,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.ucs.domain.LoginLog" >
    insert into t_login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="mobileNo != null" >
        mobile_no,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="session != null" >
        `session`,
      </if>
      <if test="ipAddr != null" >
        ip_addr,
      </if>
      <if test="clientType != null" >
        client_type,
      </if>
      <if test="businessLine != null" >
        business_line,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="mobileNo != null" >
        #{mobileNo,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="session != null" >
        #{session,jdbcType=VARCHAR},
      </if>
      <if test="ipAddr != null" >
        #{ipAddr,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="businessLine != null" >
        #{businessLine,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.milisong.ucs.domain.LoginLog">
    update t_login_log
    set user_id = #{userId,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      mobile_no = #{mobileNo,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      `session` = #{session,jdbcType=VARCHAR},
      ip_addr = #{ipAddr,jdbcType=VARCHAR},
      client_type = #{clientType,jdbcType=VARCHAR},
      business_line = #{businessLine,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_id, nick_name, mobile_no, open_id, `session`, ip_addr, client_type, business_line,
    create_time, update_time
    from t_login_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultType="com.milisong.ucs.domain.LoginLog">
    select id, user_id, nick_name, mobile_no, open_id, `session`, ip_addr, client_type, business_line,
    create_time, update_time
    from t_login_log
  </select>
</mapper>