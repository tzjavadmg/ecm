<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.milisong.pms.prom.mapper.UserRedPacketMapper" >
  <resultMap id="BaseResultMap" type="com.milisong.pms.prom.domain.UserRedPacket" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="acitivty_id" property="acitivtyId" jdbcType="BIGINT" />
    <result column="user_activity_id" property="userActivityId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
    <result column="is_share" property="isShare" jdbcType="TINYINT" />
    <result column="is_valid" property="isValid" jdbcType="TINYINT" />
    <result column="is_used" property="isUsed" jdbcType="TINYINT" />
    <result column="business_line" property="businessLine" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, acitivty_id, user_activity_id, name, `type`, user_id, order_id, amount, expire_time, is_share, is_valid, is_used,
     business_line, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from user_red_packet
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.milisong.pms.prom.domain.UserRedPacket" >
    insert into user_red_packet (id, acitivty_id, user_activity_id, name, `type`, user_id,
      order_id, amount, expire_time,
      is_share, is_valid, is_used, business_line,
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{acitivtyId,jdbcType=BIGINT}, #{userActivityId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{userId,jdbcType=BIGINT},
      #{orderId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{expireTime,jdbcType=TIMESTAMP},
      #{isShare,jdbcType=TINYINT}, #{isValid,jdbcType=TINYINT}, #{isUsed,jdbcType=TINYINT}, #{businessLine,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.milisong.pms.prom.domain.UserRedPacket" >
    insert into user_red_packet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="acitivtyId != null" >
        acitivty_id,
      </if>
      <if test="userActivityId != null" >
        user_activity_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
      <if test="isShare != null" >
        is_share,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="isUsed != null" >
        is_used,
      </if>
      <if test="businessLine != null" >
        business_line,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="acitivtyId != null" >
        #{acitivtyId,jdbcType=BIGINT},
      </if>
      <if test="userActivityId != null" >
        #{userActivityId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isShare != null" >
        #{isShare,jdbcType=TINYINT},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="isUsed != null" >
        #{isUsed,jdbcType=TINYINT},
      </if>
      <if test="businessLine != null" >
        #{businessLine,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.milisong.pms.prom.domain.UserRedPacket" >
    update user_red_packet
    <set >
      <if test="acitivtyId != null" >
        acitivty_id = #{acitivtyId,jdbcType=BIGINT},
      </if>
      <if test="userActivityId != null" >
        user_activity_id = #{userActivityId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isShare != null" >
        is_share = #{isShare,jdbcType=TINYINT},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="isUsed != null" >
        is_used = #{isUsed,jdbcType=TINYINT},
      </if>
      <if test="businessLine != null" >
        business_line = #{businessLine,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.milisong.pms.prom.domain.UserRedPacket" >
    update user_red_packet
    set acitivty_id = #{acitivtyId,jdbcType=BIGINT},
      user_activity_id = #{userActivityId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      is_share = #{isShare,jdbcType=TINYINT},
      is_valid = #{isValid,jdbcType=TINYINT},
      is_used = #{isUsed,jdbcType=TINYINT},
      business_line = #{businessLine,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryUserRedPacket" resultType="com.milisong.pms.prom.dto.UserRedPacketDto">
    select id, acitivty_id as acitivtyId, user_activity_id as userActivityId, name, `type`, user_id as userId, order_id as orderId, amount,
    expire_time as expireTime, is_share as isShare, is_valid as isValid, is_used as isUsed
    from user_red_packet
    where user_id = #{userId,jdbcType=BIGINT}
     <if test="type != null">
       and `type` = #{type,jdbcType=TINYINT}
     </if>
    <if test="usable != null and usable == true">
      and is_valid = 1 and is_used = 0
    </if>
    order by expire_time asc
  </select>

  <select id="usableUserRedPacketCount" resultType="int">
    select count(*)
    from user_red_packet
    where user_id = #{userId,jdbcType=BIGINT} and is_valid = 1 and is_used = 0
  </select>

  <select id="totalCount" resultType="int">
    select count(*)
    from user_red_packet
    where user_id = #{userId,jdbcType=BIGINT}
    <if test="usable != null">
      <if test="usable == true">
        and ( is_valid = 1 and is_used = 0 )
      </if>
      <if test="usable == false">
        and ( is_valid = 0 or is_used = 1 )
      </if>
    </if>
  </select>

  <select id="userRedPacketList" resultType="com.milisong.pms.prom.dto.UserRedPacketDto">
    select id, acitivty_id as acitivtyId, user_activity_id as userActivityId, name, `type`, user_id as userId, order_id as orderId, amount,
    expire_time as expireTime, is_share as isShare, is_valid as isValid, is_used as isUsed
    from user_red_packet
    where user_id = #{userId,jdbcType=BIGINT}
    <if test="usable != null">
      <if test="usable == true">
        and ( is_valid = 1 and is_used = 0 )
      </if>
      <if test="usable == false">
        and ( is_valid = 0 or is_used = 1 )
      </if>
    </if>
    order by create_time desc
    limit #{startRow} , #{pageSize}
  </select>

  <select id="queryUserRedPacketByOrderId" resultType="com.milisong.pms.prom.dto.UserRedPacketDto">
    select id, acitivty_id as acitivtyId, user_activity_id as userActivityId, name, `type`, user_id as userId, order_id as orderId, amount,
    expire_time as expireTime, is_share as isShare, is_valid as isValid, is_used as isUsed
    from user_red_packet
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>

  <update id="scanUserRedPacket" parameterType="java.util.Date">
    <![CDATA[
    update user_red_packet
    set is_valid = 0,
      update_time = #{currentDate,jdbcType=TIMESTAMP}
      where #{currentDate,jdbcType=TIMESTAMP} >= expire_time
      and is_valid = 1 and is_used = 0
     ]]>
  </update>

  <select id="queryUserRedPacketByUserActivityId" resultType="com.milisong.pms.prom.dto.UserRedPacketDto">
    select id, acitivty_id as acitivtyId, user_activity_id as userActivityId, name, `type`, user_id as userId, order_id as orderId, amount,
    expire_time as expireTime, is_share as isShare, is_valid as isValid, is_used as isUsed
    from user_red_packet
    where user_id = #{userId,jdbcType=BIGINT} and user_activity_id = #{userActivityId,jdbcType=BIGINT}
    <if test="type != null">
      and `type` = #{type,jdbcType=TINYINT}
    </if>
  </select>

  <insert id="insertBatch" parameterType="java.util.List">
    insert into user_red_packet (id, acitivty_id, user_activity_id, name, `type`, user_id,
    order_id, amount, expire_time,
    is_share, is_valid, is_used, business_line,
    create_time, update_time)
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
        #{item.id,jdbcType=BIGINT}, #{item.acitivtyId,jdbcType=BIGINT}, #{item.userActivityId,jdbcType=BIGINT},
        #{item.name,jdbcType=VARCHAR}, #{item.type,jdbcType=TINYINT}, #{item.userId,jdbcType=BIGINT},
        #{item.orderId,jdbcType=BIGINT}, #{item.amount,jdbcType=DECIMAL}, #{item.expireTime,jdbcType=TIMESTAMP},
        #{item.isShare,jdbcType=TINYINT}, #{item.isValid,jdbcType=TINYINT}, #{item.isUsed,jdbcType=TINYINT}, #{item.businessLine,jdbcType=TINYINT},
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>
  <select id="toastUserRedPacket" resultType="com.milisong.pms.prom.dto.UserRedPacketDto">
    select id, acitivty_id as acitivtyId, user_activity_id as userActivityId, name, `type`, user_id as userId, order_id as orderId, amount,
    expire_time as expireTime, is_share as isShare, is_valid as isValid, is_used as isUsed
    from user_red_packet
    where  user_id = #{userId} and is_valid = 1 and is_used = 0
    order by amount desc, expire_time asc
    limit #{limit}
  </select>

  <select id="filterUserRedPacketWithAmount" resultType="java.lang.Long">
    select distinct user_id from user_red_packet
    where user_id in
    <foreach collection="ids" index="index" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
    <![CDATA[
      and amount > #{conditionAmount} and is_valid = 1 and is_used = 0
     ]]>
  </select>
</mapper>